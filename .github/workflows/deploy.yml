name: Deploy to Azure

on:
  push:
    branches: [ "main" ]

env:
  ACR_NAME: springhelloregistry
  IMAGE_NAME: spring-hello
  RESOURCE_GROUP: cloud-shell-storage-eastus
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Permitir execução do mvnw
        run: chmod +x ./mvnw

      - name: Build with Maven
        run: ./mvnw package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name $ACR_NAME

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -input=false

      - name: Terraform Init/Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
            -var="client_id=${{ env.ARM_CLIENT_ID }}" \
            -var="client_secret=${{ env.ARM_CLIENT_SECRET }}" \
            -var="tenant_id=${{ env.ARM_TENANT_ID }}" \
            -var="resource_group=${{ env.RESOURCE_GROUP }}" \
            -var="acr_name=${{ env.ACR_NAME }}" \
            -var="image_name=${{ env.IMAGE_NAME }}"
      
      
